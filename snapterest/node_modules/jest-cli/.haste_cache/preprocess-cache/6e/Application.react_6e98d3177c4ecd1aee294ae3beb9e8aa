'use strict';var React = require('react');
var Stream = require('./Stream.react');
var Collection = require('./Collection.react');

var Application = React.createClass({ displayName: 'Application', 
    getInitialState: function getInitialState() {
        return { 
            collectionTweets: {} };}, 


    addTweetToCollection: function addTweetToCollection(tweet) {
        //console.log("Application: addTweetToCollection", tweet);
        var collectionTweets = this.state.collectionTweets;
        collectionTweets[tweet.id] = tweet;
        this.setState({ 
            collectionTweets: collectionTweets });

        //console.log("Application: addTweetToCollection this.state.collectionTweets", this.state.collectionTweets);
    }, 
    removeTweetFromCollection: function removeTweetFromCollection(tweet) {
        var collectionTweets = this.state.collectionTweets;
        delete collectionTweets[tweet.id];
        this.setState({ 
            collectionTweets: collectionTweets });}, 


    removeAllTweetsFromCollection: function removeAllTweetsFromCollection() {
        this.setState({ 
            collectionTweets: {} });}, 


    render: function render() {
        var tweets = this.state.collectionTweets;
        //console.log("this.state.collectionTweets", this.state.collectionTweets);
        return (
            React.createElement('div', { className: 'container-fluid' }, 
            React.createElement('div', { className: 'row' }, 
            React.createElement('div', { className: 'col-md-4', 'text-center': true }, 
            React.createElement(Stream, { onAddTweetToCollection: this.addTweetToCollection })), 

            React.createElement('div', { className: 'col-md-8' }, 
            React.createElement(Collection, { tweets: tweets, onRemoveTweetFromCollection: this.removeTweetFromCollection, 
                onRemoveAllTweetsFromCollection: this.removeAllTweetsFromCollection })))));} });







module.exports = Application;